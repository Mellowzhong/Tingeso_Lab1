services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - backend-network

# Backend
  backend1:
    image: mellow03/backend-presta-banco:latest
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PORT=${PORT}
    networks:
      - backend-network

  backend2:
    image: mellow03/backend-presta-banco:latest
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PORT=${PORT}  
    networks:
      - backend-network

  backend3:
    image: mellow03/backend-presta-banco:latest
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PORT=${PORT}
    networks:
      - backend-network

# Frontend
  frontend1:
    build:
      context: ./Frontend   # Asegúrate de que este sea el directorio correcto donde está tu Dockerfile.
    networks:
      - frontend-network

# nginx para el frontend
  nginx-frontend:
    image: nginx:latest
    volumes:
      - ./nginx-frontend.conf:/etc/nginx/nginx.conf
    ports:
      - "8070:80"   # Mapeo correcto del puerto externo al interno.
    depends_on:
      - frontend1
    networks:
      - frontend-network

# nginx para el backend
  nginx-backend:
    image: nginx:latest
    volumes:
      - ./nginx-backend.conf:/etc/nginx/nginx.conf
    ports:
      - "8090:8090"   # Mapeo correcto del puerto externo al interno.
    depends_on:
      - backend1
      - backend2
      - backend3
    networks:
      - backend-network

networks:
  backend-network:
  frontend-network: