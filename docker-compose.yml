services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - backend-network

  backend1:
    image: mellow03/backend:latest
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PORT= ${PORT}
    networks:
      - backend-network

  backend2:
    image: mellow03/backend:latest
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PORT= ${PORT}
    networks:
      - backend-network

  backend3:
    image: mellow03/backend:latest
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PORT= ${PORT}
    networks:
      - backend-network

  frontend:
    container_name: frontend_container
    image: mellow03/frontend:latest
    ports:
      - "80:80"
    deploy:
      restart_policy:
        condition: on-failure

  nginx-backend:
    image: nginx:latest
    ports:
      - "8081:8081"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - backend1
      - backend2
      - backend3
    networks:
      - backend-network

networks:
  backend-network: